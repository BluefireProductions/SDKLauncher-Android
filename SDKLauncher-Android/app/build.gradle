def ndk_skipX86 = (rootProject.hasProperty("readium_ndk_skipX86") && rootProject.readium_ndk_skipX86)
def ndk_skipARM = (rootProject.hasProperty("readium_ndk_skipARM") && rootProject.readium_ndk_skipARM)
def ndk_clang = (rootProject.hasProperty("readium_ndk_clang") && rootProject.readium_ndk_clang)
def ndk_debug = (rootProject.hasProperty("readium_ndk_debug") && rootProject.readium_ndk_debug)

if (ndk_debug) {
    // Use gradle experimental receipt to debug C/C++ code
    println "${project.name}: Use gradle experimental to build application"
    apply from: 'build_experimental.gradle'
} else {
    apply from: 'build_stable.gradle'
}

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs '../libs'
    }
}

dependencies {
    compile 'com.nononsenseapps:filepicker:3.0.0'

    compile 'com.android.support:support-v4:23.+'

    compile 'com.koushikdutta.ion:ion:2.+'
    // compile 'com.koushikdutta.async:androidasync:2.+' ALREADY INCLUDED AS DEPENDENCY OF com.koushikdutta.ion

    compile 'commons-io:commons-io:2.4'
}

task buildCssAssets(type: Copy) {
    from '../../readium-shared-js/build-output/css'
    into './src/main/assets/readium-shared-js/builds/css'
}

task buildSingleBundleAssets(type: Copy) {
    from '../../readium-shared-js/build-output/_multiple-bundles'
    into './src/main/assets/readium-shared-js/builds/multiple-bundle'
}

task buildMultipleBundleAssets(type: Copy) {
    from '../../readium-shared-js/build-output/_single-bundle'
    into './src/main/assets/readium-shared-js/builds/single-bundle'
}

task buildAssets {
    println "Build Js Assets"
}

buildAssets.dependsOn "buildCssAssets",
        "buildSingleBundleAssets",
        "buildMultipleBundleAssets"

apply from: 'build_epubReadingSystem.gradle'

tasks.whenTaskAdded { task ->
    def taskName = task.name

    if (taskName.startsWith("compile")) {
        task.dependsOn "buildAssets",
            ":epub3:buildMk",
            ":lcp:buildMk",
            "buildEpubReadingSystem"
    }
}
